/* 
 * Custom Grid System - Bootstrap Replacement
 * Replaces Bootstrap's container, row, col-* classes
 */

// Grid Variables
$grid-columns: 12;
$grid-gutter-width: 30px;
$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
);

$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  xxl: 1320px
);

// Container
.container {
  width: 100%;
  padding-right: calc($grid-gutter-width / 2);
  padding-left: calc($grid-gutter-width / 2);
  margin-right: auto;
  margin-left: auto;

  @each $breakpoint, $container-max-width in $container-max-widths {
    @media (min-width: map-get($grid-breakpoints, $breakpoint)) {
      max-width: $container-max-width;
    }
  }
}

.container-fluid {
  width: 100%;
  padding-right: calc($grid-gutter-width / 2);
  padding-left: calc($grid-gutter-width / 2);
  margin-right: auto;
  margin-left: auto;
}

// Row
.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: calc($grid-gutter-width / -2);
  margin-left: calc($grid-gutter-width / -2);
}

// Column mixin
@mixin col-base {
  position: relative;
  width: 100%;
  padding-right: calc($grid-gutter-width / 2);
  padding-left: calc($grid-gutter-width / 2);
}

// Generate column classes
@for $i from 1 through $grid-columns {
  .col-#{$i} {
    @include col-base;
    flex: 0 0 percentage($i / $grid-columns);
    max-width: percentage($i / $grid-columns);
  }
}

// Auto column
.col {
  @include col-base;
  flex: 1 0 0%;
}

// Responsive columns
@each $breakpoint, $min-width in $grid-breakpoints {
  @if $breakpoint != xs {
    @media (min-width: $min-width) {
      @for $i from 1 through $grid-columns {
        .col-#{$breakpoint}-#{$i} {
          @include col-base;
          flex: 0 0 percentage($i / $grid-columns);
          max-width: percentage($i / $grid-columns);
        }
      }
      
      .col-#{$breakpoint} {
        @include col-base;
        flex: 1 0 0%;
      }
    }
  }
}

// Utility classes for flexbox
.d-flex {
  display: flex !important;
}

.d-flex-all {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.justify-content-start {
  justify-content: flex-start !important;
}

.justify-content-end {
  justify-content: flex-end !important;
}

.justify-content-center {
  justify-content: center !important;
}

.justify-content-between {
  justify-content: space-between !important;
}

.justify-content-around {
  justify-content: space-around !important;
}

.align-items-start {
  align-items: flex-start !important;
}

.align-items-end {
  align-items: flex-end !important;
}

.align-items-center {
  align-items: center !important;
}

.align-items-baseline {
  align-items: baseline !important;
}

.align-items-stretch {
  align-items: stretch !important;
}

.flex-wrap {
  flex-wrap: wrap !important;
}

.flex-nowrap {
  flex-wrap: nowrap !important;
}

.flex-column {
  flex-direction: column !important;
}

.flex-row {
  flex-direction: row !important;
}

// Text utilities
.text-left {
  text-align: left !important;
}

.text-center {
  text-align: center !important;
}

.text-right {
  text-align: right !important;
}

// Display utilities
.d-none {
  display: none !important;
}

.d-block {
  display: block !important;
}

.d-inline {
  display: inline !important;
}

.d-inline-block {
  display: inline-block !important;
}

// Responsive display utilities
@each $breakpoint, $min-width in $grid-breakpoints {
  @if $breakpoint != xs {
    @media (min-width: $min-width) {
      .d-#{$breakpoint}-none {
        display: none !important;
      }
      
      .d-#{$breakpoint}-block {
        display: block !important;
      }
      
      .d-#{$breakpoint}-flex {
        display: flex !important;
      }
    }
  }
}

// Spacing utilities (margin and padding)
$spacer: 1rem;
$spacers: (
  0: 0,
  1: $spacer * 0.25,
  2: $spacer * 0.5,
  3: $spacer,
  4: $spacer * 1.5,
  5: $spacer * 3,
);

@each $prop, $abbrev in (margin: m, padding: p) {
  @each $size, $length in $spacers {
    .#{$abbrev}-#{$size} {
      #{$prop}: $length !important;
    }
    .#{$abbrev}t-#{$size} {
      #{$prop}-top: $length !important;
    }
    .#{$abbrev}r-#{$size} {
      #{$prop}-right: $length !important;
    }
    .#{$abbrev}b-#{$size} {
      #{$prop}-bottom: $length !important;
    }
    .#{$abbrev}l-#{$size} {
      #{$prop}-left: $length !important;
    }
    .#{$abbrev}x-#{$size} {
      #{$prop}-left: $length !important;
      #{$prop}-right: $length !important;
    }
    .#{$abbrev}y-#{$size} {
      #{$prop}-top: $length !important;
      #{$prop}-bottom: $length !important;
    }
  }
}

// Width utilities
.w-25 {
  width: 25% !important;
}

.w-50 {
  width: 50% !important;
}

.w-75 {
  width: 75% !important;
}

.w-100 {
  width: 100% !important;
}

.w-auto {
  width: auto !important;
}

// Height utilities
.h-25 {
  height: 25% !important;
}

.h-50 {
  height: 50% !important;
}

.h-75 {
  height: 75% !important;
}

.h-100 {
  height: 100% !important;
}

.h-auto {
  height: auto !important;
}